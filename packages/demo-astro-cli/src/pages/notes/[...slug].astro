---
import Layout from "../../layouts/main.astro";
import { getCollection } from "astro:content";
import { bdb } from "../../lib/braindb";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const notes = await getCollection("notes");
  return notes.map((note) => {
    return {
      params: { slug: note.slug },
      props: { entry: note },
    };
  });
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content, headings } = await entry.render();

const doc = await bdb.findDocument(`/${entry.collection}/${entry.id}`);

// <div>
//   <b>Backlinks:</b>
//   {
//     entry.data.backlinks.map(({ title, url }) => (
//       <li>
//         <a href={url}>{title}</a>
//       </li>
//     ))
//   }
// </div>
---

<Layout content={entry.data}>
  <div><b>Title:</b> {entry.data.title}</div>
  <div>
    <b>Backlinks:</b>
    {
      doc.documentsFrom().map((x) => (
        <li>
          <a href={x.url()}>{x.title()}</a>
        </li>
      ))
    }
  </div>
  <!-- <div>
    <b>Headings:</b>
    {JSON.stringify(headings)}
  </div> -->
  <Content />
</Layout>
